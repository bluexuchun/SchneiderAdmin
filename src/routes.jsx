/**
 * 定义应用路由
 */
import React from 'react';
import {
  Router,
  // browserHistory,
  hashHistory,
} from 'react-router';
import { Provider } from 'react-redux';

// 路由配置规则参考： https://github.com/ReactTraining/react-router/blob/v3/docs/guides/RouteConfiguration.md#configuration-with-plain-routes
// 一下部分是由 ICE 相关工具自动生成的路由，请勿随意改变，否则可能会出现一些异常情况
// <!-- auto generated routes start -->
import Fenlei from './pages/Fenlei';
import FenleiList from './pages/FenleiList';
import UserSettingC from './pages/UserSettingC';
import ChatManage from './pages/ChatManage';
import Register from './pages/Register';
import ChapterManage from './pages/ChapterManage';
import ChapterManageList from './pages/ChapterManageList';
import CourseHerald from './pages/CourseHerald';
import CourseHeraldList from './pages/CourseHeraldList';
import LiveChatManage from './pages/LiveChatManage';
import ConsultationManage from './pages/ConsultationManage';
import ConsultationManageList from './pages/ConsultationManageList';
import ThinkTankList from './pages/ThinkTankList';
import ThinkTank from './pages/ThinkTank';
import AuthoritySetting from './pages/AuthoritySetting';
import AuthoritySettingList from './pages/AuthoritySettingList';
import HomeSlideList from './pages/HomeSlideList';
import HomeSlide from './pages/HomeSlide';
import LiveSetting from './pages/LiveSetting';
import LiveSettingList from './pages/LiveSettingList';
import TopicManage from './pages/TopicManage';
import TopicManageList from './pages/TopicManageList';
import ManagerSetting from './pages/ManagerSetting';
import ManagerSettingList from './pages/ManagerSettingList';
import BottomMenuSetting from './pages/BottomMenuSetting';
import BottomMenuSettingList from './pages/BottomMenuSettingList';
import HomeNavManageList from './pages/HomeNavManageList';
import HomeNavManage from './pages/HomeNavManage';
import UserSetting from './pages/UserSetting';
import CommunicationSetting from './pages/CommunicationSetting';
import UserinfoSetting from './pages/UserinfoSetting';
import CourseManage from './pages/CourseManage';
import CourseManageList from './pages/CourseManageList';
import Class from './pages/Class';
import ShareSetting from './pages/ShareSetting';
import ClassList from './pages/ClassList';
import ParamsSetting from './pages/ParamsSetting';
import Banner from './pages/Banner';
import BannerList from './pages/BannerList';
import ActivityList from './pages/ActivityList';
import ActivityClass from './pages/ActivityClass';
import ActivityClassList from './pages/ActivityClassList';
import Setting from './pages/Setting';
import BlankLayout from './layouts/BlankLayout';
import AuthRoute from './components/AuthRoute';
import Login from './pages/Login';
import HeaderAsideFooterResponsiveLayout from './layouts/HeaderAsideFooterResponsiveLayout';
import HeaderAsideFooterLayout from './layouts/HeaderAsideFooterLayout';
import Home from './pages/Home';
import HeaderFooterLayout from './layouts/HeaderFooterLayout';
import NotFound from './pages/NotFound';
import QuestionList from './pages/QuestionList'
import Question from './pages/Question'
import AnswerList from './pages/AnswerList'
import Answer from './pages/Answer'
import ScoreList from './pages/ScoreList'
const autoGeneratedRoutes = [
  {
  path: 'usersetting/:id',
  childRoutes: [],
  component: BlankLayout,
  indexRoute: {
    component: UserSettingC
  }
  },
  {
  path: 'register',
  childRoutes: [],
  component: BlankLayout,
  indexRoute: {
    component: Register
  }
  },
  {
  path: 'chaptermanage/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: ChapterManage
  }
},
{
path: 'chatmanage',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: ChatManage
}
},
{
path: 'chaptermanagelist',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: ChapterManageList
}
},
  {
  path: 'courseherald/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: CourseHerald
  }
},
{
path: 'courseheraldlist',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: CourseHeraldList
}
},
  {
  path: 'livechatmanage',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: LiveChatManage
  }
},
  {
  path: 'consultationmanage/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: ConsultationManage
  }
},
{
path: 'consultationmanagelist',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: ConsultationManageList
}
},
  {
  path: 'thinktanklist',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: ThinkTankList
  }
},
  {
  path: 'thinktank/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: ThinkTank
  }
},
  {
  path: 'authoritysetting/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: AuthoritySetting
  }
},
{
path: 'authoritysettinglist',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: AuthoritySettingList
}
},
  {
  path: 'homeslidelist',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: HomeSlideList
  }
},
{
path: 'homeslide/:id',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: HomeSlide
}
},
  {
  path: 'livesettinglist',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: LiveSettingList
  }
},
{
path: 'livesetting/:id',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: LiveSetting
}
},
  {
  path: 'activityList',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: ActivityList
  }
},
  {
  path: 'managersetting/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: ManagerSetting
  }
},
{
path: 'managersettinglist',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: ManagerSettingList
}
},
{
path: 'homenavmanage/:id',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: HomeNavManage
}
},
{
path: 'topicmanage/:id',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: TopicManage
}
},
{
path: 'topicmanagelist',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: TopicManageList
}
},
{
path: 'homenavmanagelist',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: HomeNavManageList
}
},
{
path: 'bottommenusetting/:id',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: BottomMenuSetting
}
},
{
path: 'bottommenusettinglist',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: BottomMenuSettingList
}
},
{
  path: 'usersetting',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: UserSetting
  }
},
{
  path: 'activityClassList',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: ActivityClassList
  }
},
{
  path: 'userinfosetting',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: UserinfoSetting
  }
},
{
  path: 'coursemanage/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: CourseManage
  }
},
{
  path: 'coursemanagelist',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: CourseManageList
  }
},
{
  path: 'sharestting',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: ShareSetting
  }
},
{
  path: 'Class/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: Class
  }
},
{
  path: 'fenlei/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: Fenlei
  }
},
{
  path: 'fenleiList',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: FenleiList
  }
},
{
  path: 'ClassList',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: ClassList
  }
},
{
  path: 'communicationsetting',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: CommunicationSetting
  }
},
{
  path: 'activityClass/:activityClassId',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: ActivityClass
  }
}, {
  path: 'Setting',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: Setting
  }
}, {
  path: 'login',
  childRoutes: [],
  component: BlankLayout,
  indexRoute: {
    component: Login
  }
}, {
  path: 'Home',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: Home
  }
},
{
  path: 'paramssetting',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: ParamsSetting
  }
},
{
  path: 'banner/:activityId',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: Banner
  }
},
{
  path: 'bannerList',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: BannerList
  }
},
{
  path: 'questionList/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: QuestionList
  }
},
{
  path: 'question/:id/:tid',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: Question
  }
},
{
  path: 'answerList/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: AnswerList
  }
},
{
  path: 'answer/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: Answer
  }
},
{
  path: 'scorelist',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: ScoreList
  }
},
{
  path: '/',
  childRoutes: [{
    path: '*',
    childRoutes: [],
    component: NotFound
  }],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: Home
  }
}];
// <!-- auto generated routes end -->

// 自定义路由，如果 path 相同则会覆盖自动生成部分的路由配置
const customRoutes = [];

const RouterMap = ({ store }) => (
  <Provider store={store}>
    <div>
      {/* <AuthRoute history={hashHistory}></AuthRoute> */}
      <Router
        history={hashHistory}
        routes={[...autoGeneratedRoutes, ...customRoutes]}
      />
    </div>
  </Provider>
);
export default RouterMap
